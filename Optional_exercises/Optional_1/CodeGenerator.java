package Optional_exercises.Optional_1;

import java.util.LinkedList;
import java.io.*;

// It has the purpose of memorizing the list of instructions of the object language in a single specific structure

public class CodeGenerator {

    LinkedList <Instruction> instructions = new LinkedList <Instruction>();

    int label=0;

    // It is used to add instructions (not all commands have operators)
    public void emit(OpCode opCode) {
        instructions.add(new Instruction(opCode));
    }

    // It is used to add instructions
    public void emit(OpCode opCode , int operand) {
        instructions.add(new Instruction(opCode, operand));
    }

    // It is used to add jump instructions
    public void emitLabel(int operand) {
        emit(OpCode.label, operand);
    }

    // It is used to create a new label
    public int newLabel() {
        return label++;
    }

    // It is used to create Output.j file
    public void toJasmin() throws IOException{
        PrintWriter out = new PrintWriter(new FileWriter("Optional_exercises/Optional_1/Output.j"));
        String temp = "";
        temp = temp + header;
        while(instructions.size() > 0){
            Instruction tmp = instructions.remove();
            temp = temp + tmp.toJasmin();
        }
        temp = temp + footer;
        out.println(temp);
        out.flush();
        out.close();
    }

    // Preamble of the code generated by the translator
    private static final String header = ".class public Output \n"
        + ".super java/lang/Object\n"
        + "\n"
        + ".method public <init>()V\n"
        + "\taload_0\n"
        + "\tinvokenonvirtual java/lang/Object/<init>()V\n"
        + "\treturn\n"
        + ".end method\n"
        + "\n"
        + ".method public static print(I)V\n"
        + ".limit stack 2\n"
        + "\tgetstatic java/lang/System/out Ljava/io/PrintStream;\n"
        + "\tiload_0 \n"
        + "\tinvokestatic java/lang/Integer/toString(I)Ljava/lang/String;\n"
        + "\tinvokevirtual java/io/PrintStream/println(Ljava/lang/String;)V\n"
        + "\treturn\n"
        + ".end method\n"
        + "\n"
        + ".method public static read()I\n"        
        + ".limit stack 3\n"        
        + "\tnew java/util/Scanner\n"        
        + "\tdup\n"        
        + "\tgetstatic java/lang/System/in Ljava/io/InputStream;\n"        
        + "\tinvokespecial java/util/Scanner/<init>(Ljava/io/InputStream;)V\n"        
        + "\tinvokevirtual java/util/Scanner/next()Ljava/lang/String;\n"        
        + "\tinvokestatic java/lang/Integer.parseInt(Ljava/lang/String;)I\n"        
        + "\tireturn\n"        
        + ".end method\n"
        + "\n"
        + ".method public static run()V\n"
        + ".limit stack 1024\n"
        + ".limit locals 256\n";

    // Epilogue of the code generated by the translator
    private static final String footer = "\treturn\n"
        + ".end method\n"
        + "\n"
        + ".method public static main([Ljava/lang/String;)V\n"
        + "\tinvokestatic Output/run()V\n"
        + "\treturn\n"
        + ".end method\n";
}
